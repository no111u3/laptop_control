@startuml
IModule <|-- Module

class IModule {
    + IModule(std::string moduleName)
    {abstract} + ~IModule()
    
    {abstract} + void init()

    + std::string name()
    {abstract} + std::vector<std::string> depends()
    
    .. Entity factory public interface ..
    + std::shared_ptr<T> entity(const std::string &name)
    
    # {abstract} std::shared_ptr<IEntity> getEntity(const std::string &name)
    ----
    note: module name is unical name for current program scope
    - std::string name
}

class Module {
    + Module()
    + void init()
    + ~Module()
    

    - std::vector<std::string> depends()
    .. Entity factory implementation ..
    - std::shared_ptr<IEntity> getEntity(const std::string &name)
    
    == Some module specific implements ==
}
@enduml
